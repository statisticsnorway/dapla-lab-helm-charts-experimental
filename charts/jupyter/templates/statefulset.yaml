{{- $fullName := include "library-chart.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "library-chart.fullname" . }}
{{- if .Values.dapla.enabled }}
  annotations:
    dapla.ssb.no/enable-ssbucketeer: "true"
    dapla.ssb.no/impersonate-group: {{ .Values.dapla.group }}
    dapla.ssb.no/service-container-name: {{ .Chart.Name }}
{{- with .Values.dapla.extraBuckets }}
    dapla.ssb.no/mount-buckets: {{ join "," . }}
{{- end }}
{{- if .Values.dapla.mountStandard }}
    dapla.ssb.no/mount-standard-buckets: "true"
{{- end }}
{{- end }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  {{- if .Values.global.suspend }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
{{- end }}
  serviceName: {{ include "library-chart.fullname" . }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.git.enabled }}
        checksum/git: {{ include (print $.Template.BasePath "/secret-git.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.oidc.enabled }}
        checksum/oidc: {{ include (print $.Template.BasePath "/secret-oidc.yaml") . | sha256sum }}
        {{- end }}
        {{- if (include "library-chart.repository.enabled"  .) }}
        checksum/repository: {{ include (print $.Template.BasePath "/configmap-repository.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      volumes:
        - name: home
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "library-chart.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - {{ include "library-chart.oauth2ProxyVolume" . | indent 10 | trim }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      subdomain: {{ include "library-chart.fullname" . }}
      hostname: jupyter
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.service.image.version }}"
          command: ["/bin/sh","-c"]
          args: ["{{ .Values.init.standardInitPath }} jupyter lab --no-browser --ip '0.0.0.0' --LabApp.token='$(PASSWORD)' --ContentsManager.allow_hidden=True"]
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          env:
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              value: "{{ .Values.service.image.version }}"
            - name: DAPLA_ENVIRONMENT
              value: {{ .Values.deployEnvironment }}
            - name: DAPLA_REGION
              value: DAPLA_LAB
            - name: DAPLA_SERVICE
              value: JUPYTERLAB
            - name: NB_USER
              value: {{ .Values.environment.user }}
            - name: PASSWORD
              value: ""
            - name: PROJECT_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_GROUP
              value: {{ .Values.environment.group }}
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/{{ .Values.environment.user }}/work
            - name: POETRY_VIRTUALENVS_IN_PROJECT
              value: "true"
            - name: JUPYTER_CONFIG_DIR
              value: /home/{{ .Values.environment.user }}/work/.jupyter/config
            - name: JUPYTER_CONFIG_PATH
              value: /home/{{ .Values.environment.user }}/work/.jupyter/config_paths
            - name: JUPYTER_PATH
              value: /home/{{ .Values.environment.user }}/work/.jupyter/data_paths
            - name: JUPYTER_DATA_DIR
              value: /home/{{ .Values.environment.user }}/work/.jupyter/data
            - name: JUPYTER_RUNTIME_DIR
              value: /home/{{ .Values.environment.user }}/work/.jupyter/runtime
            - name: RENV_PATHS_LIBRARY
              value: /home/{{ .Values.environment.user }}/work/.renv
            - name: RENV_PATHS_CACHE
              value: /home/{{ .Values.environment.user }}/work/.renv/cache
            - name: STAT_TEMPLATE_DEFAULT_REFERENCE
              value: "1.1.6"
            - name: JUPYTERHUB_HTTP_REFERER
              value: "https://{{ .Values.istio.hostname }}/"
            - name: JUPYTERHUB_USER
              value: "onyxia"
            - name: JUPYTERHUB_SERVICE_PREFIX
              value: "/user/onyxia/"
            {{- if .Values.init.regionInit }}
            - name: REGION_INIT_SCRIPT
              value: {{ .Values.init.regionInit }}
            {{- end }}
            {{- if .Values.init.personalInit }}
            - name: PERSONAL_INIT_SCRIPT
              value: {{ .Values.init.personalInit }}
            {{- end }}
            {{- if .Values.init.personalInitArgs }}
            - name: PERSONAL_INIT_ARGS
              value: {{ .Values.init.personalInitArgs }}
            {{- end }}
            {{- if .Values.environment.root }}
            - name: GRANT_SUDO
              value: "yes"
            {{- end }}
          envFrom:
            {{- if .Values.git.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameGit" . }}
            {{- end }}
            {{- if .Values.oidc.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameOidc" . }}
            {{- end }}
            {{- if (include "library-chart.repository.enabled"  .) }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameRepository" . }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /user/onyxia/
              port: {{ .Values.networking.service.port }}
          readinessProbe:
            httpGet:
              path: /user/onyxia/
              port: {{ .Values.networking.service.port }}
          startupProbe:
            httpGet:
              path: /user/onyxia/
              port: {{ .Values.networking.service.port }}
            {{- toYaml .Values.startupProbe | nindent 12 }}     
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /home/{{ .Values.environment.user}}/work
              subpath: work
              name: home
        - {{ include "library-chart.oauth2ProxyPod" . | indent 10 | trim }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
