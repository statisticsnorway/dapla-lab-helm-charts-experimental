global:
  suspend: false
tjeneste:
  version: "dev1"
  image:
    pullPolicy: IfNotPresent

security:
  networkPolicy:
    enabled: false
    from: []
  allowlist:
    enabled: false
    ip: "0.0.0.0/0"
  serviceEntry:
    enabled: true
    hosts:
      - "storage.googleapis.com"
  oauth2:
    provider: keycloak-oidc
    oidcIssuerUrl: "overwritten-by-onyxia"
    clientId: "my-client"
    authenticatedEmails: ""

init:
  standardInitPath: "/opt/onyxia-init.sh"
  regionInit: ""
  regionInitCheckSum: ""
  personalInit: ""
  personalInitArgs: ""

userAttributes:
  environmentVariableName: OIDC_TOKEN
  userAttribute: "access_token"
  value: ""

oidc:
  # Specifies whether a config map should be created
  enabled: true
  tokenExchangeUrl: ""
  # The name of the configmap to use.
  # If not set and create is true, a name is generated using the fullname template
  secretName: ""

gitConfig:
  git:
    # Specifies whether a config map should be created
    enabled: false
    # The name of the configmap to use.
    # If not set and create is true, a name is generated using the fullname template
    configMapName: ""
    name: ""
    email: ""
    cache: ""
  github:
    token: ""
    repository: ""
    branch: ""

repository:
  configMapName: ""
  pipRepository: ""
  condaRepository: ""

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

environment:
  user: onyxia
  group: users

kubernetes:
  enabled: true
  role: "view"

podAnnotations: {}

podSecurityContext:
  fsGroup: 100

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

networking:
  type: ClusterIP
  clusterIP: None
  service:
    port: 8080

istio:
  enabled: false
  gateways:
    - istio-namespace/example-gateway
  hostname: chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube.
  cpu: ""
  memory: ""

diskplass:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi
  # existingClaim: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

userPreferences: {}

affinity: {}

dapla:
  sourceData:
    reason: ""
    requestedDuration: "4h"
  group: "dapla-felles-developers"
  sharedBuckets: []

avansert:
  data:
    mountStandard: true

deleteJob:
  enabled: true
  cronMinuteAtDay: "0"
  cronHourAtDay: "20"
  imageVersion: "v1.1.0"
  clusterRoleName: onyxia-delete-job
  serviceAccount:
    annotations: {}
deployEnvironment: "DEV"
daplaUser: ""
statbankBaseUrl: ""
statbankEncryptUrl: ""
suvDaplaApiUrl: ""
pseudoServiceUrl: ""
maskinportenGuardianUrl: ""
